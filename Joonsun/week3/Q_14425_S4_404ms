import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;
import java.util.Stack;
import java.util.StringTokenizer;

public class Q_14425_S4_404ms {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        HashSet<String> s = new HashSet<>();
        Stack<String> check = new Stack<>();

        // 입력
        st = new StringTokenizer(br.readLine(), " ");
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());

        // 집합 S에 포함되어 있는 단어 (N개)
        for (int i = 0; i < N; i++) {
            st = new StringTokenizer(br.readLine());
            String str1 = st.nextToken();
            s.add(str1);
        }

        // M개 단어 검사
        int cnt = 0;
        for (int i = 0; i < M; i++) {
            st = new StringTokenizer(br.readLine());
            String str2 = st.nextToken();
            
            if (s.contains(str2)) cnt++;
        }

        System.out.println(cnt);
        br.close();

    }  // end main
}  // end class

/*
 * M개의 단어 중 집합 S에 있는 단어가 몇 개인지 출력
 * 1 <= N <= 10,000
 * 1 <= M <= 10,000
 *
 * 집합 S에 담을 문자열은 s라는 Map에 담고,
 * 집합 S와 비교할 문자열은 check라는 스택에 넣고, 하나씩 꺼냄
 * 꺼내면서 집합 S에 들어있는지 확인
 * 들어있다면 cnt++
 * 반복문은 stack에 원소가 있는 동안 실행
 */
